"""
1 - events
insert:
Events: insert 

bookmark_border
 
Note: Requires authorization.
Creates an event. Try it now or see an example.

Request
HTTP request

POST https://www.googleapis.com/calendar/v3/calendars/calendarId/events
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
Optional query parameters
conferenceDataVersion	integer	Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1, inclusive.
maxAttendees	integer	The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
sendNotifications	boolean	Deprecated. Please use sendUpdates instead.

Whether to send notifications about the creation of the new event. Note that some emails might still be sent even if you set the value to false. The default is false.
sendUpdates	string	Whether to send notifications about the creation of the new event. Note that some emails might still be sent. The default is false.

Acceptable values are:
"all": Notifications are sent to all guests.
"externalOnly": Notifications are sent to non-Google Calendar guests only.
"none": No notifications are sent.
Warning: Using the value none can have significant adverse effects, including events not syncing to external calendars or events being lost altogether for some users. For calendar migration tasks, consider using the events.import method instead.
supportsAttachments	boolean	Whether API client performing operation supports event attachments. Optional. The default is False.
Authorization
This request requires authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
In the request body, supply an Events resource with the following properties:

Property name	Value	Description	Notes
Required Properties
end	nested object	The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.	
start	nested object	The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.	
Optional Properties
anyoneCanAddSelf	boolean	Whether anyone can invite themselves to the event (deprecated). Optional. The default is False.	writable
attachments[].fileUrl	string	URL link to the attachment.
For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.

Required when adding an attachment.

writable
attendees[]	list	The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users. Service accounts need to use domain-wide delegation of authority to populate the attendee list.	writable
attendees[].additionalGuests	integer	Number of additional guests. Optional. The default is 0.	writable
attendees[].comment	string	The attendee's response comment. Optional.	writable
attendees[].displayName	string	The attendee's name, if available. Optional.	writable
attendees[].email	string	The attendee's email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.
Required when adding an attendee.

writable
attendees[].optional	boolean	Whether this is an optional attendee. Optional. The default is False.	writable
attendees[].resource	boolean	Whether the attendee is a resource. Can only be set when the attendee is added to the event for the first time. Subsequent modifications are ignored. Optional. The default is False.	writable
attendees[].responseStatus	string	The attendee's response status. Possible values are:
"needsAction" - The attendee has not responded to the invitation (recommended for new events).
"declined" - The attendee has declined the invitation.
"tentative" - The attendee has tentatively accepted the invitation.
"accepted" - The attendee has accepted the invitation.
Warning: If you add an event using the values declined, tentative, or accepted, attendees with the "Add invitations to my calendar" setting set to "When I respond to invitation in email" or "Only if the sender is known" might have their response reset to needsAction and won't see an event in their calendar unless they change their response in the event invitation email. Furthermore, if more than 200 guests are invited to the event, response status is not propagated to the guests.
writable
birthdayProperties	nested object	Birthday or special event data. Used if eventType is "birthday". Immutable.	writable
birthdayProperties.type	string	Type of birthday or special event. Possible values are:
"anniversary" - An anniversary other than birthday. Always has a contact.
"birthday" - A birthday event. This is the default value.
"custom" - A special date whose label is further specified in the customTypeName field. Always has a contact.
"other" - A special date which does not fall into the other categories, and does not have a custom label. Always has a contact.
"self" - Calendar owner's own birthday. Cannot have a contact.
The Calendar API only supports creating events with the type "birthday". The type cannot be changed after the event is created.	writable
colorId	string	The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional.	writable
conferenceData	nested object	The conference-related information, such as details of a Google Meet conference. To create new conference details use the createRequest field. To persist your changes, remember to set the conferenceDataVersion request parameter to 1 for all event modification requests.	writable
description	string	Description of the event. Can contain HTML. Optional.	writable
end.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
end.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
end.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
eventType	string	Specific type of the event. This cannot be modified after the event is created. Possible values are:
"birthday" - A special all-day event with an annual recurrence.
"default" - A regular event or not further specified.
"focusTime" - A focus-time event.
"fromGmail" - An event from Gmail. This type of event cannot be created.
"outOfOffice" - An out-of-office event.
"workingLocation" - A working location event.
writable
extendedProperties.private	object	Properties that are private to the copy of the event that appears on this calendar.	writable
extendedProperties.shared	object	Properties that are shared between copies of the event on other attendees' calendars.	writable
focusTimeProperties	nested object	Focus Time event data. Used if eventType is focusTime.	writable
gadget.display	string	The gadget's display mode. Deprecated. Possible values are:
"icon" - The gadget displays next to the event's title in the calendar view.
"chip" - The gadget displays when the event is clicked.
writable
gadget.height	integer	The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated.	writable
gadget.iconLink	string	The gadget's icon URL. The URL scheme must be HTTPS. Deprecated.	writable
gadget.link	string	The gadget's URL. The URL scheme must be HTTPS. Deprecated.	writable
gadget.preferences	object	Preferences.	writable
gadget.title	string	The gadget's title. Deprecated.	writable
gadget.type	string	The gadget's type. Deprecated.	writable
gadget.width	integer	The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated.	writable
guestsCanInviteOthers	boolean	Whether attendees other than the organizer can invite others to the event. Optional. The default is True.	writable
guestsCanModify	boolean	Whether attendees other than the organizer can modify the event. Optional. The default is False.	writable
guestsCanSeeOtherGuests	boolean	Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.	writable
id	string	Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:
characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938
the length of the ID must be between 5 and 1024 characters
the ID must be unique per calendar
Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122.
If you do not specify an ID, it will be automatically generated by the server.

Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.

writable
location	string	Geographic location of the event as free-form text. Optional.	writable
originalStartTime.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
originalStartTime.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
originalStartTime.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
outOfOfficeProperties	nested object	Out of office event data. Used if eventType is outOfOffice.	writable
recurrence[]	list	List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events.	writable
reminders.overrides[]	list	If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event. The maximum number of override reminders is 5.	writable
reminders.overrides[].method	string	The method used by this reminder. Possible values are:
"email" - Reminders are sent via email.
"popup" - Reminders are sent via a UI popup.
Required when adding a reminder.

writable
reminders.overrides[].minutes	integer	Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
Required when adding a reminder.

writable
reminders.useDefault	boolean	Whether the default reminders of the calendar apply to the event.	writable
sequence	integer	Sequence number as per iCalendar.	writable
source.title	string	Title of the source; for example a title of a web page or an email subject.	writable
source.url	string	URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.	writable
start.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
start.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
start.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
status	string	Status of the event. Optional. Possible values are:
"confirmed" - The event is confirmed. This is the default status.
"tentative" - The event is tentatively confirmed.
"cancelled" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them.
A cancelled status represents two different states depending on the event type:

Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event.
Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty.

All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely.
Deleted events are only guaranteed to have the id field populated.

On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details.
If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated.

writable
summary	string	Title of the event.	writable
transparency	string	Whether the event blocks time on the calendar. Optional. Possible values are:
"opaque" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI.
"transparent" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI.
writable
visibility	string	Visibility of the event. Optional. Possible values are:
"default" - Uses the default visibility for events on the calendar. This is the default value.
"public" - The event is public and event details are visible to all readers of the calendar.
"private" - The event is private and only event attendees may view event details.
"confidential" - The event is private. This value is provided for compatibility reasons.
writable
workingLocationProperties	nested object	Working location event data.	writable
workingLocationProperties.customLocation	object	If present, specifies that the user is working from a custom location.	writable
workingLocationProperties.customLocation.label	string	An optional extra label for additional information.	writable
workingLocationProperties.homeOffice	any value	If present, specifies that the user is working at home.	writable
workingLocationProperties.officeLocation	object	If present, specifies that the user is working from an office.	writable
workingLocationProperties.officeLocation.buildingId	string	An optional building identifier. This should reference a building ID in the organization's Resources database.	writable
workingLocationProperties.officeLocation.deskId	string	An optional desk identifier.	writable
workingLocationProperties.officeLocation.floorId	string	An optional floor identifier.	writable
workingLocationProperties.officeLocation.floorSectionId	string	An optional floor section identifier.	writable
workingLocationProperties.officeLocation.label	string	The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database.	writable
workingLocationProperties.type	string	Type of the working location. Possible values are:
"homeOffice" - The user is working at home.
"officeLocation" - The user is working from an office.
"customLocation" - The user is working from a custom location.
Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored.
Required when adding working location properties.

writable
Response
If successful, this method returns an Events resource in the response body.

Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
.NET
Go
JavaScript
Node.js
Uses the Python client library.


# Refer to the Python quickstart on how to setup the environment:
# https://developers.google.com/calendar/quickstart/python
# Change the scope to 'https://www.googleapis.com/auth/calendar' and delete any
# stored credentials.

event = {
  'summary': 'Google I/O 2015',
  'location': '800 Howard St., San Francisco, CA 94103',
  'description': 'A chance to hear more about Google\'s developer products.',
  'start': {
    'dateTime': '2015-05-28T09:00:00-07:00',
    'timeZone': 'America/Los_Angeles',
  },
  'end': {
    'dateTime': '2015-05-28T17:00:00-07:00',
    'timeZone': 'America/Los_Angeles',
  },
  'recurrence': [
    'RRULE:FREQ=DAILY;COUNT=2'
  ],
  'attendees': [
    {'email': 'lpage@example.com'},
    {'email': 'sbrin@example.com'},
  ],
  'reminders': {
    'useDefault': False,
    'overrides': [
      {'method': 'email', 'minutes': 24 * 60},
      {'method': 'popup', 'minutes': 10},
    ],
  },
}

event = service.events().insert(calendarId='primary', body=event).execute()
print 'Event created: %s' % (event.get('htmlLink'))


List:

Request
HTTP request

GET https://www.googleapis.com/calendar/v3/calendars/calendarId/events
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
Optional query parameters
alwaysIncludeEmail	boolean	Deprecated and ignored.
eventTypes	string	Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. If unset, returns all event types.

Acceptable values are:
"birthday": Special all-day events with an annual recurrence.
"default": Regular events.
"focusTime": Focus time events.
"fromGmail": Events from Gmail.
"outOfOffice": Out of office events.
"workingLocation": Working location events.
iCalUID	string	Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID.
maxAttendees	integer	The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
maxResults	integer	Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
orderBy	string	The order of the events returned in the result. Optional. The default is an unspecified, stable order.

Acceptable values are:
"startTime": Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)
"updated": Order by last modification time (ascending).
pageToken	string	Token specifying which result page to return. Optional.
privateExtendedProperty	string	Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
q	string	Free text search terms to find events that match these terms in the following fields:
summary
description
location
attendee's displayName
attendee's email
organizer's displayName
organizer's email
workingLocationProperties.officeLocation.buildingId
workingLocationProperties.officeLocation.deskId
workingLocationProperties.officeLocation.label
workingLocationProperties.customLocation.label
These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for "Office" or "Bureau" returns working location events of type officeLocation, whereas searching for "Out of office" or "Abwesend" returns out-of-office events. Optional.

sharedExtendedProperty	string	Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
showDeleted	boolean	Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
showHiddenInvitations	boolean	Whether to include hidden invitations in the result. Optional. The default is False.
singleEvents	boolean	Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
syncToken	string	Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.

These are:
iCalUID
orderBy
privateExtendedProperty
q
sharedExtendedProperty
timeMin
timeMax
updatedMin
All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
Learn more about incremental synchronization.
Optional. The default is to return all entries.
timeMax	datetime	Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin.
timeMin	datetime	Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax.
timeZone	string	Time zone used in the response. Optional. The default is the time zone of the calendar.
updatedMin	datetime	Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.
Authorization
This request allows authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar.readonly
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events.readonly
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
Do not supply a request body with this method.

Response
If successful, this method returns a response body with the following structure:


{
  "kind": "calendar#events",
  "etag": etag,
  "summary": string,
  "description": string,
  "updated": datetime,
  "timeZone": string,
  "accessRole": string,
  "defaultReminders": [
    {
      "method": string,
      "minutes": integer
    }
  ],
  "nextPageToken": string,
  "nextSyncToken": string,
  "items": [
    events Resource
  ]
}
Property name	Value	Description	Notes
kind	string	Type of the collection ("calendar#events").	
etag	etag	ETag of the collection.	
summary	string	Title of the calendar. Read-only.	
description	string	Description of the calendar. Read-only.	
updated	datetime	Last modification time of the calendar (as a RFC3339 timestamp). Read-only.	
timeZone	string	The time zone of the calendar. Read-only.	
accessRole	string	The user's access role for this calendar. Read-only. Possible values are:
"none" - The user has no access.
"freeBusyReader" - The user has read access to free/busy information.
"reader" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.
"writer" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.
"owner" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
defaultReminders[]	list	The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).	
defaultReminders[].method	string	The method used by this reminder. Possible values are:
"email" - Reminders are sent via email.
"popup" - Reminders are sent via a UI popup.
Required when adding a reminder.

writable
defaultReminders[].minutes	integer	Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
Required when adding a reminder.

writable
nextPageToken	string	Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.	
items[]	list	List of events on the calendar.	
nextSyncToken	string	Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.	
Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
Uses the Python client library.


page_token = None
while True:
  events = service.events().list(calendarId='primary', pageToken=page_token).execute()
  for event in events['items']:
    print event['summary']
  page_token = events.get('nextPageToken')
  if not page_token:
    break

delete:

Request
HTTP request

DELETE https://www.googleapis.com/calendar/v3/calendars/calendarId/events/eventId
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
eventId	string	Event identifier.
Optional query parameters
sendNotifications	boolean	Deprecated. Please use sendUpdates instead.

Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
sendUpdates	string	Guests who should receive notifications about the deletion of the event.

Acceptable values are:
"all": Notifications are sent to all guests.
"externalOnly": Notifications are sent to non-Google Calendar guests only.
"none": No notifications are sent. For calendar migration tasks, consider using the Events.import method instead.
Authorization
This request requires authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
Do not supply a request body with this method.

Response
If successful, this method returns an empty response body.

Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
Uses the Python client library.


service.events().delete(calendarId='primary', eventId='eventId').execute()

update:

Updates an event. This method does not support patch semantics and always updates the entire event resource. To do a partial update, perform a get followed by an update using etags to ensure atomicity. Try it now or see an example.

Request
HTTP request

PUT https://www.googleapis.com/calendar/v3/calendars/calendarId/events/eventId
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
eventId	string	Event identifier.
Optional query parameters
alwaysIncludeEmail	boolean	Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided).
conferenceDataVersion	integer	Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1, inclusive.
maxAttendees	integer	The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
sendNotifications	boolean	Deprecated. Please use sendUpdates instead.

Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false.
sendUpdates	string	Guests who should receive notifications about the event update (for example, title changes, etc.).

Acceptable values are:
"all": Notifications are sent to all guests.
"externalOnly": Notifications are sent to non-Google Calendar guests only.
"none": No notifications are sent. For calendar migration tasks, consider using the Events.import method instead.
supportsAttachments	boolean	Whether API client performing operation supports event attachments. Optional. The default is False.
Authorization
This request requires authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
In the request body, supply an Events resource with the following properties:

Property name	Value	Description	Notes
Required Properties
end	nested object	The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.	
start	nested object	The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.	
Optional Properties
anyoneCanAddSelf	boolean	Whether anyone can invite themselves to the event (deprecated). Optional. The default is False.	writable
attachments[].fileUrl	string	URL link to the attachment.
For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.

Required when adding an attachment.

writable
attendees[]	list	The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users. Service accounts need to use domain-wide delegation of authority to populate the attendee list.	writable
attendees[].additionalGuests	integer	Number of additional guests. Optional. The default is 0.	writable
attendees[].comment	string	The attendee's response comment. Optional.	writable
attendees[].displayName	string	The attendee's name, if available. Optional.	writable
attendees[].email	string	The attendee's email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.
Required when adding an attendee.

writable
attendees[].optional	boolean	Whether this is an optional attendee. Optional. The default is False.	writable
attendees[].resource	boolean	Whether the attendee is a resource. Can only be set when the attendee is added to the event for the first time. Subsequent modifications are ignored. Optional. The default is False.	writable
attendees[].responseStatus	string	The attendee's response status. Possible values are:
"needsAction" - The attendee has not responded to the invitation (recommended for new events).
"declined" - The attendee has declined the invitation.
"tentative" - The attendee has tentatively accepted the invitation.
"accepted" - The attendee has accepted the invitation.
Warning: If you add an event using the values declined, tentative, or accepted, attendees with the "Add invitations to my calendar" setting set to "When I respond to invitation in email" or "Only if the sender is known" might have their response reset to needsAction and won't see an event in their calendar unless they change their response in the event invitation email. Furthermore, if more than 200 guests are invited to the event, response status is not propagated to the guests.
writable
attendeesOmitted	boolean	Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.	writable
colorId	string	The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the colors endpoint). Optional.	writable
conferenceData	nested object	The conference-related information, such as details of a Google Meet conference. To create new conference details use the createRequest field. To persist your changes, remember to set the conferenceDataVersion request parameter to 1 for all event modification requests.	writable
description	string	Description of the event. Can contain HTML. Optional.	writable
end.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
end.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
end.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
extendedProperties.private	object	Properties that are private to the copy of the event that appears on this calendar.	writable
extendedProperties.shared	object	Properties that are shared between copies of the event on other attendees' calendars.	writable
focusTimeProperties	nested object	Focus Time event data. Used if eventType is focusTime.	writable
gadget.display	string	The gadget's display mode. Deprecated. Possible values are:
"icon" - The gadget displays next to the event's title in the calendar view.
"chip" - The gadget displays when the event is clicked.
writable
gadget.height	integer	The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated.	writable
gadget.iconLink	string	The gadget's icon URL. The URL scheme must be HTTPS. Deprecated.	writable
gadget.link	string	The gadget's URL. The URL scheme must be HTTPS. Deprecated.	writable
gadget.preferences	object	Preferences.	writable
gadget.title	string	The gadget's title. Deprecated.	writable
gadget.type	string	The gadget's type. Deprecated.	writable
gadget.width	integer	The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated.	writable
guestsCanInviteOthers	boolean	Whether attendees other than the organizer can invite others to the event. Optional. The default is True.	writable
guestsCanModify	boolean	Whether attendees other than the organizer can modify the event. Optional. The default is False.	writable
guestsCanSeeOtherGuests	boolean	Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.	writable
location	string	Geographic location of the event as free-form text. Optional.	writable
originalStartTime.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
originalStartTime.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
originalStartTime.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
outOfOfficeProperties	nested object	Out of office event data. Used if eventType is outOfOffice.	writable
recurrence[]	list	List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events.	writable
reminders.overrides[]	list	If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event. The maximum number of override reminders is 5.	writable
reminders.overrides[].method	string	The method used by this reminder. Possible values are:
"email" - Reminders are sent via email.
"popup" - Reminders are sent via a UI popup.
Required when adding a reminder.

writable
reminders.overrides[].minutes	integer	Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
Required when adding a reminder.

writable
reminders.useDefault	boolean	Whether the default reminders of the calendar apply to the event.	writable
sequence	integer	Sequence number as per iCalendar.	writable
source.title	string	Title of the source; for example a title of a web page or an email subject.	writable
source.url	string	URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.	writable
start.date	date	The date, in the format "yyyy-mm-dd", if this is an all-day event.	writable
start.dateTime	datetime	The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.	writable
start.timeZone	string	The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.	writable
status	string	Status of the event. Optional. Possible values are:
"confirmed" - The event is confirmed. This is the default status.
"tentative" - The event is tentatively confirmed.
"cancelled" - The event is cancelled (deleted). The list method returns cancelled events only on incremental sync (when syncToken or updatedMin are specified) or if the showDeleted flag is set to true. The get method always returns them.
A cancelled status represents two different states depending on the event type:

Cancelled exceptions of an uncancelled recurring event indicate that this instance should no longer be presented to the user. Clients should store these events for the lifetime of the parent recurring event.
Cancelled exceptions are only guaranteed to have values for the id, recurringEventId and originalStartTime fields populated. The other fields might be empty.

All other cancelled events represent deleted events. Clients should remove their locally synced copies. Such cancelled events will eventually disappear, so do not rely on them being available indefinitely.
Deleted events are only guaranteed to have the id field populated.

On the organizer's calendar, cancelled events continue to expose event details (summary, location, etc.) so that they can be restored (undeleted). Similarly, the events to which the user was invited and that they manually removed continue to provide details. However, incremental sync requests with showDeleted set to false will not return these details.
If an event changes its organizer (for example via the move operation) and the original organizer is not on the attendee list, it will leave behind a cancelled event where only the id field is guaranteed to be populated.

writable
summary	string	Title of the event.	writable
transparency	string	Whether the event blocks time on the calendar. Optional. Possible values are:
"opaque" - Default value. The event does block time on the calendar. This is equivalent to setting Show me as to Busy in the Calendar UI.
"transparent" - The event does not block time on the calendar. This is equivalent to setting Show me as to Available in the Calendar UI.
writable
visibility	string	Visibility of the event. Optional. Possible values are:
"default" - Uses the default visibility for events on the calendar. This is the default value.
"public" - The event is public and event details are visible to all readers of the calendar.
"private" - The event is private and only event attendees may view event details.
"confidential" - The event is private. This value is provided for compatibility reasons.
writable
workingLocationProperties	nested object	Working location event data.	writable
workingLocationProperties.customLocation	object	If present, specifies that the user is working from a custom location.	writable
workingLocationProperties.customLocation.label	string	An optional extra label for additional information.	writable
workingLocationProperties.homeOffice	any value	If present, specifies that the user is working at home.	writable
workingLocationProperties.officeLocation	object	If present, specifies that the user is working from an office.	writable
workingLocationProperties.officeLocation.buildingId	string	An optional building identifier. This should reference a building ID in the organization's Resources database.	writable
workingLocationProperties.officeLocation.deskId	string	An optional desk identifier.	writable
workingLocationProperties.officeLocation.floorId	string	An optional floor identifier.	writable
workingLocationProperties.officeLocation.floorSectionId	string	An optional floor section identifier.	writable
workingLocationProperties.officeLocation.label	string	The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database.	writable
workingLocationProperties.type	string	Type of the working location. Possible values are:
"homeOffice" - The user is working at home.
"officeLocation" - The user is working from an office.
"customLocation" - The user is working from a custom location.
Any details are specified in a sub-field of the specified name, but this field may be missing if empty. Any other fields are ignored.
Required when adding working location properties.

writable
Response
If successful, this method returns an Events resource in the response body.

Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
Uses the Python client library.


# First retrieve the event from the API.
event = service.events().get(calendarId='primary', eventId='eventId').execute()

event['summary'] = 'Appointment at Somewhere'

updated_event = service.events().update(calendarId='primary', eventId=event['id'], body=event).execute()

# Print the updated date.
print updated_event['updated']

quickadd:

Request
HTTP request

POST https://www.googleapis.com/calendar/v3/calendars/calendarId/events/quickAdd
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
Required query parameters
text	string	The text describing the event to be created.
Optional query parameters
sendNotifications	boolean	Deprecated. Please use sendUpdates instead.

Whether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
sendUpdates	string	Guests who should receive notifications about the creation of the new event.

Acceptable values are:
"all": Notifications are sent to all guests.
"externalOnly": Notifications are sent to non-Google Calendar guests only.
"none": No notifications are sent. For calendar migration tasks, consider using the Events.import method instead.
Authorization
This request requires authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
Do not supply a request body with this method.

Response
If successful, this method returns an Events resource in the response body.

Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
Uses the Python client library.


created_event = service.events().quickAdd(
    calendarId='primary',
    text='Appointment at Somewhere on June 3rd 10am-10:25am').execute()

print created_event['id']

list:

Request
HTTP request

GET https://www.googleapis.com/calendar/v3/calendars/calendarId/events
Parameters
Parameter name	Value	Description
Path parameters
calendarId	string	Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
Optional query parameters
alwaysIncludeEmail	boolean	Deprecated and ignored.
eventTypes	string	Event types to return. Optional. This parameter can be repeated multiple times to return events of different types. If unset, returns all event types.

Acceptable values are:
"birthday": Special all-day events with an annual recurrence.
"default": Regular events.
"focusTime": Focus time events.
"fromGmail": Events from Gmail.
"outOfOffice": Out of office events.
"workingLocation": Working location events.
iCalUID	string	Specifies an event ID in the iCalendar format to be provided in the response. Optional. Use this if you want to search for an event by its iCalendar ID.
maxAttendees	integer	The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
maxResults	integer	Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
orderBy	string	The order of the events returned in the result. Optional. The default is an unspecified, stable order.

Acceptable values are:
"startTime": Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)
"updated": Order by last modification time (ascending).
pageToken	string	Token specifying which result page to return. Optional.
privateExtendedProperty	string	Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
q	string	Free text search terms to find events that match these terms in the following fields:
summary
description
location
attendee's displayName
attendee's email
organizer's displayName
organizer's email
workingLocationProperties.officeLocation.buildingId
workingLocationProperties.officeLocation.deskId
workingLocationProperties.officeLocation.label
workingLocationProperties.customLocation.label
These search terms also match predefined keywords against all display title translations of working location, out-of-office, and focus-time events. For example, searching for "Office" or "Bureau" returns working location events of type officeLocation, whereas searching for "Out of office" or "Abwesend" returns out-of-office events. Optional.

sharedExtendedProperty	string	Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
showDeleted	boolean	Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
showHiddenInvitations	boolean	Whether to include hidden invitations in the result. Optional. The default is False.
singleEvents	boolean	Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
syncToken	string	Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.

These are:
iCalUID
orderBy
privateExtendedProperty
q
sharedExtendedProperty
timeMin
timeMax
updatedMin
All other query parameters should be the same as for the initial synchronization to avoid undefined behavior. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
Learn more about incremental synchronization.
Optional. The default is to return all entries.
timeMax	datetime	Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin.
timeMin	datetime	Lower bound (exclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax.
timeZone	string	Time zone used in the response. Optional. The default is the time zone of the calendar.
updatedMin	datetime	Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.
Authorization
This request allows authorization with at least one of the following scopes:

Scope
https://www.googleapis.com/auth/calendar.readonly
https://www.googleapis.com/auth/calendar
https://www.googleapis.com/auth/calendar.events.readonly
https://www.googleapis.com/auth/calendar.events
For more information, see the authentication and authorization page.

Request body
Do not supply a request body with this method.

Response
If successful, this method returns a response body with the following structure:


{
  "kind": "calendar#events",
  "etag": etag,
  "summary": string,
  "description": string,
  "updated": datetime,
  "timeZone": string,
  "accessRole": string,
  "defaultReminders": [
    {
      "method": string,
      "minutes": integer
    }
  ],
  "nextPageToken": string,
  "nextSyncToken": string,
  "items": [
    events Resource
  ]
}
Property name	Value	Description	Notes
kind	string	Type of the collection ("calendar#events").	
etag	etag	ETag of the collection.	
summary	string	Title of the calendar. Read-only.	
description	string	Description of the calendar. Read-only.	
updated	datetime	Last modification time of the calendar (as a RFC3339 timestamp). Read-only.	
timeZone	string	The time zone of the calendar. Read-only.	
accessRole	string	The user's access role for this calendar. Read-only. Possible values are:
"none" - The user has no access.
"freeBusyReader" - The user has read access to free/busy information.
"reader" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.
"writer" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.
"owner" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
defaultReminders[]	list	The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).	
defaultReminders[].method	string	The method used by this reminder. Possible values are:
"email" - Reminders are sent via email.
"popup" - Reminders are sent via a UI popup.
Required when adding a reminder.

writable
defaultReminders[].minutes	integer	Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
Required when adding a reminder.

writable
nextPageToken	string	Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.	
items[]	list	List of events on the calendar.	
nextSyncToken	string	Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.	
Examples
Note: The code examples available for this method do not represent all supported programming languages (see the client libraries page for a list of supported languages).

Java
Python
PHP
Ruby
Uses the Python client library.


page_token = None
while True:
  events = service.events().list(calendarId='primary', pageToken=page_token).execute()
  for event in events['items']:
    print event['summary']
  page_token = events.get('nextPageToken')
  if not page_token:
    break

    



